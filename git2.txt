加油
git init 建立repository
git status / git log 查看當前狀態/紀錄
git mv <名稱><名稱> 更改目錄名稱
git add 加入索引 git add -u 可以僅將「更新」或「刪除」的檔案變更寫入
git commit -m "" 提交 訊息用來溝通修改內容 概念類似於存檔
git push -u <名稱><網址>上傳到雲端repository -u設定預設值
git reset 取消提交
git reset --hard ORIG_HEAD 回到上一版
git checkout 恢復文件及切換分支

branch分支開發及merge合併
git checkout -b <名稱> 建立新branch並切過去
git branch 查看分支
git branch -d <名稱> 刪除分支
git switch 切換分支
git pull 從雲端更新
git push -f
git merge 合併兩個分支，保留完整的提交歷史
git rebase 把當前分支的提交重新應用到目標分支上，使歷史保持線性
git rebase     | git merge
保留原始commit    重新排列提交
適合多人          若分支已推到雲端避免使用
git歷史分支       線性歷史

git stash -u <暫存檔訊息> 暫存檔
git stash pop 取回暫存檔
git diff 自動比對檔案衝突
git reset --hard "HEAD^"   刪除最近一次版本
git reset --soft "HEAD^"   刪除最近一次的版本紀錄,但保留變更
git reset --hard ORIG_HEAD 還原最近一次的操作（merge,rebase,reset）
git commit --amend 重新提交HEAD版本（補充或是修改訊息）